vec4 coll(vec4 b){
  float bug=0.0;
  bool pred=gl_VertexID%2==0;
  //gl_InstanceID; インスタンスレンダリングの時に
  if(pred)bug=1.0;
   vec4 col=vec4(0,0,1,1);
  col.y=bug;
  return col;
}

void mills(){
    vec4 position = gl_ModelViewMatrix * gl_Vertex;
  vec3 normal = normalize(gl_NormalMatrix * gl_Normal);
  vec3 light = normalize((gl_LightSource[0].position * position.w - gl_LightSource[0].position.w * position).xyz);
  float diffuse = max(dot(light, normal), 0.0);
  
  vec3 view = -normalize(position.xyz);
  vec3 halfway = normalize(light + view);
  float specular = pow(max(dot(normal, halfway), 0.0), gl_FrontMaterial.shininess);
  gl_FrontColor = gl_FrontLightProduct[0].diffuse * diffuse
                + gl_FrontLightProduct[0].specular * specular
                + gl_FrontLightProduct[0].ambient;
  
  gl_Position = ftransform();
}
void main()
{
  gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
  gl_FrontColor = vec4(0.0, 1.0, 0.0, 1.0);

  gl_Position = ftransform();

  gl_FrontColor=coll(gl_FrontColor);
mills();
}
